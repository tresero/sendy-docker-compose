---
version: "3"
services:

  ## ###############
  ## Sendy
  ## ###############
  sendy_apache:
    container_name: sendy_apache
    build:
      args:
        - SENDY_LICENSE_KEY: ${SENDY_LICENSE_KEY}
        - CACHEBUST=${CACHEBUST}
    depends_on:
      - sendy_mysql
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./sendy/config.php:/var/www/html/includes/config.php
    networks:
      - internal-in-no-external-out
      - internal-in-external-out
    restart: unless-stopped

  sendy_mysql:
    container_name: sendy_mysql
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${SENDY_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: sendy_mail
      MYSQL_USER: sendyuser
      MYSQL_PASSWORD: ${SENDY_MYSQL_PASSWORD}
    volumes:
      - ./mysql:/var/lib/mysql
      - ./database-imports:/docker-entrypoint-initdb.d
    networks:
      - internal-in-no-external-out
    restart: unless-stopped

## ###############
## Network configuration
## Containers without a netowrk are isolated from other containers, but have outgoing access enabled by default
## ###############

# By default, docker blocks incoming connections, except for network: host, and port mappings
networks:

  # Allows a container to connect to the internet outside of the other docker containers
  internal-in-external-out:
    name: internal-in-external-out
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16 # Subnet ips are presedined here so swag knows what are trusted proxy ips

  # Only allow outgoing connections to other docker containers
  internal-in-no-external-out:
    name: internal-in-no-external-out
    driver: bridge
    internal: true

    
